{"version":3,"sources":["Nav.jsx","MessagePanel.jsx","UserPanel.jsx","AddMessage.jsx","services.js","ShowChat.jsx","Login.jsx","App.jsx","reportWebVitals.js","index.js","errors.js"],"names":["Nav","user","onLogout","isLoggedIn","className","href","onClick","MessagePanel","currentUser","messages","map","message","sender","timestamp","Date","parse","toString","text","id","UserPanel","users","index","AddMessage","username","onAddMessage","useState","setMessage","isPending","setIsPending","isDisabled","setIsDisabled","onChange","e","target","value","name","placeholder","fetch","method","headers","Headers","body","JSON","stringify","catch","Promise","reject","error","then","response","ok","json","addMessage","type","disabled","ShowChat","Login","onLogin","setUsername","status","setStatus","createSession","err","errors","App","content","userState","setUserState","useEffect","updateMessagesAndUsersPeriodically","setTimeout","newMessages","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5d338a51.chunk.js","sourcesContent":["import {useState} from 'react';\n\nconst Nav = function({user, onLogout}) {\n    if(!user.isLoggedIn) {\n        return null;\n    }\n    return (\n       <nav>\n           <ul className=\"nav\">\n               <li><a href=\"#logout\" onClick={onLogout}>Logout</a></li>\n           </ul>\n       </nav> \n    );\n};\n\nexport default Nav;","const MessagePanel = function({currentUser, messages}) {\n  const convertTimeToReadable = function (timestamp) {\n    const date = new Date(Date.parse(timestamp));\n    return date.toString();\n  }\n\n  return (\n        <ol className='messages'>\n           {messages.map(\n               (message) => <li  key={message.id}>\n               <div className={message.sender===currentUser?\"message self\": \"message\"}>\n                   <div className=\"sender-info\">\n                     <span className=\"sendername\">{message.sender===currentUser ?currentUser+'(You)':message.sender}</span>\n                     <hr></hr>\n                     <span className=\"sendtime\">{convertTimeToReadable(message.timestamp)}</span>\n                   </div>\n                    <p>{message.text}</p>\n               </div>\n             </li>\n           )}\n       </ol>\n    );\n};\n\nexport default MessagePanel;","const UserPanel = function({currentUser, users}) {\n   return (\n        <ul className=\"users\">\n            {\n                users.map(\n                    (user, index) => \n                        <li key={user + index}>\n                            <div className={currentUser === user  ? \"user self\" : \"user\"}>\n                                <span className=\"sendername\">{currentUser === user?user+\"(You)\":user}</span>\n                            </div>\n                        </li>\n                )\n            }\n        </ul>\n   );\n};\n\nexport default UserPanel;\n","import {useState} from 'react';\nimport {addMessage} from './services';\n\nconst AddMessage = function({username, onAddMessage}) {\n    const [message, setMessage] = useState('');\n    const [isPending, setIsPending] = useState(false);\n    const [isDisabled, setIsDisabled] = useState(true);\n\n    const onChange = (e) => {\n        setMessage(e.target.value);\n        setIsDisabled(!e.target.value);\n    }\n\n    const sendMessage = () => {\n        setIsPending(true);\n        addMessage(message)\n        .then((message) => {\n            onAddMessage(message);\n            setMessage('');\n            setIsPending(false);\n            setIsDisabled(true);\n        });\n    };\n\n    return (\n        <div className=\"addmessage\">\n            <form>\n                <input onChange={onChange} className=\"messagetosend\" name=\"text\" value={message} placeholder='Type your message'></input>\n                <button onClick={sendMessage} className=\"sendbutton\" type=\"submit\" disabled={isPending || isDisabled}>Send</button>\n            </form>\n        </div>  \n    );\n};\n\nexport default AddMessage;","export const checkSession = () => {\n    return fetch('/api/session',  {\n      method: 'GET',\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n      if(response.ok) {\n        return response.json();\n      }\n      return response.json().then( json => Promise.reject(json) );\n    });\n  };\n\nexport const createSession = ({username}) => {\n  return fetch('/api/session',  {\n    method: 'POST',\n    headers: new Headers({\n      'content-type': 'application/json',\n    }),\n    body: JSON.stringify({ username }),\n  })\n  .catch( () => Promise.reject({ error: 'network-error'} ) )\n  .then( response => {\n    if(response.ok) {\n      return response.json();\n    }\n    return response.json().then( json => Promise.reject(json) );\n  });\n};\n\nexport const endSession = () => {\n  return fetch('/api/session',  {\n    method: 'DELETE',\n  })\n  .catch( () => Promise.reject({ error: 'network-error'} ) )\n  .then( response => {\n    if(response.ok) {\n      return response.json();\n    }\n    return response.json().then( json => Promise.reject(json) );\n  });\n};\n\nexport const addMessage = (message) => {\n  return fetch('/api/message',  {\n      method: 'POST',\n      headers: new Headers({\n          'content-type': 'application/json',\n      }),\n      body: JSON.stringify({ message }),\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n      if(response.ok) {\n        return response.json();\n      }\n      return response.json().then( json => Promise.reject(json) );\n    });\n} \n\nexport const getMessagesAndUsers = (message) => {\n  return fetch('/api/messagesandusers',  {\n      method: 'GET',\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n      if(response.ok) {\n        return response.json();\n      }\n      return response.json().then( json => Promise.reject(json) );\n    });\n} \n\n ","import MessagePanel from './MessagePanel';\nimport UserPanel from './UserPanel';\nimport AddMessage from './AddMessage';\n\nconst ShowChat = function({currentUser, users, messages, onAddMessage}) {\n    return (\n       <div className=\"chat-app\">\n          <div className=\"display-panel\">\n            <MessagePanel messages={messages} currentUser={currentUser}/>\n            <UserPanel users={users} currentUser={currentUser}/>\n          </div>\n          <AddMessage onAddMessage={onAddMessage}/>\n       </div>\n    );\n};\n\nexport default ShowChat;","import { createSession } from \"./services\";\nimport {useState} from 'react';\nimport errors from './errors.js';\n\nconst Login = function({ onLogin }) {\n    const [username, setUsername] = useState('');\n    const [isPending, setIsPending] = useState(false);\n    const [isDisabled, setIsDisabled] = useState(true);\n    const [status, setStatus] = useState('');\n\n    const onChange = (e) => {\n        setStatus('');\n        setUsername(e.target.value);\n        setIsDisabled(!e.target.value);\n    }\n\n    const login = () => {\n        setIsPending(true);\n        createSession({username})\n        .then(({currentUser, users, messages}) => {\n            onLogin({currentUser, users, messages});\n            setStatus('');\n            setIsPending(false);\n        })\n        .catch(err => {\n            setStatus(err.error);\n            setIsPending(false);\n        });\n    };\n\n    return (\n        <div className='login-screen'>\n            <h2>Login</h2>\n            <form>\n                <div className='login-box'>\n                    <input onChange={onChange} className='username-input' placeholder='Type in your username' disabled={isPending} value={username}/>\n                    <br></br>\n                    <button onClick={login} className='login-button' disabled={isDisabled || isPending}>{isPending? \"...\" : \"Login\"}</button>\n                </div>\n                <div className='status'> \n                    {errors[status]}\n                </div>\n            </form>\n        </div>\n    );\n\n\n};\n\nexport default Login;","import './App.css';\nimport {checkSession, endSession, getMessagesAndUsers} from './services';\nimport { useState, useEffect } from 'react';\nimport Nav from './Nav';\nimport ShowChat from './ShowChat';\nimport Login from './Login';\n\nfunction App() {\n  const [userState, setUserState] = useState({ isLoggedIn: false, isPending: true });\n\n  useEffect( () => {\n    checkSession()\n    .then( ({currentUser, users, messages}) => {\n      setUserState({\n        isLoggedIn: true,\n        isPending: false,\n        currentUser,\n        users,\n        messages,\n      });\n    })\n    .catch( () => {\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    });\n  }, []);\n\n  // Polling to update users and messages list.\n  useEffect( () => {\n    function updateMessagesAndUsersPeriodically() {\n      getMessagesAndUsers()\n      .then( ({currentUser, users, messages}) => {\n        setUserState({\n          isLoggedIn: true,\n          isPending: false,\n          currentUser,\n          users,\n          messages,\n        });\n      })\n      .then(setTimeout(updateMessagesAndUsersPeriodically, 5000));\n    }\n\n    updateMessagesAndUsersPeriodically();\n  },[]);\n\n  const login = function({currentUser, users, messages}) {\n    setUserState({\n      isLoggedIn: true,\n      isPending: false,\n      currentUser,\n      users,\n      messages,\n    });\n  };\n\n  const logout = function() {\n    setUserState({\n      ...userState,\n      isPending: true,\n    });\n    endSession()\n    .then(() => {\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    })\n    .catch(() => {\n      setUserState({\n        ...userState,\n        isPending: false,\n      });\n    });\n  };\n\n  const addMessage = function(message){\n    const newMessages = userState.messages;\n    newMessages.push(message);\n    setUserState({\n      ...userState,\n      messages: newMessages,\n    });\n  };\n\n  if(userState.isPending) {\n    return (\n      <div className=\"app\">\n        Loading...\n      </div>\n    );\n  }\n\n  let content;\n  if (userState.isLoggedIn) {\n    content = <ShowChat currentUser={userState.currentUser} users={userState.users} messages={userState.messages} onAddMessage={addMessage}/>;\n  } else {\n    content = <Login onLogin={login}/>;\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-title\">\n        <h1>Chat App</h1>\n      </div>\n      <Nav user={userState} onLogout={logout}/>\n      {content}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const errors = {\n    'username-invalid': 'Username is invalid, it should not contain dog!',\n    'username-required': 'Username is required.',\n    'session-required': '',\n    'session-invalid': 'Unknown user session.',\n};\n\nmodule.exports = errors;"],"sourceRoot":""}